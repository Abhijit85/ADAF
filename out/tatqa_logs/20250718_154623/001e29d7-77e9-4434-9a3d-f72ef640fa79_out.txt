
=== FINAL SUMMARY ===

1) INSUFFICIENT DATA
2) INSUFFICIENT DATA
3) INSUFFICIENT DATA
4) INSUFFICIENT DATA
5)  million
6)  percent

Answer Echoes:
1) TABLE: (none) | CONTEXT: (none) | TAG: NONE
2) TABLE: (none) | CONTEXT: (none) | TAG: 
3) TABLE: (none) | CONTEXT: (none) | TAG: 
4) TABLE: (none) | CONTEXT: (none) | TAG: 
5) TABLE: (none) | CONTEXT: (none) | TAG: 
6) TABLE: (none) | CONTEXT: (none) | TAG: 

=== LOGS (per-agent) ===
{'Contextron': {'cot': '',
                'result': '(json emitted)',
                'raw': '{"status": "NONE", "text": "", "expr": ""}',
                'json': [{'status': 'NONE', 'text': '', 'expr': ''}]},
 'TabuSynth': {'prompt': 'You are the **Table agent**.  For each question you '
                         'must decide whether the table alone can answer it, '
                         'then (if needed) compute the answer using a '
                         'Chain-of-Table reasoning plan.\n'
                         '\n'
                         'You are given the *current status* from the Context '
                         'agent.  If that status is "FULL" simply verify the '
                         'numeric precision and echo the answer; otherwise '
                         'fill the gap.\n'
                         '\n'
                         'Return a JSON **list** — one object per question, '
                         'matching the input order.\n'
                         '\n'
                         'WORKFLOW (per question)\n'
                         '1. Look at `ctx_status` entry.  If `status == '
                         '"FULL"`, set `status" : "FULL"` in your output and '
                         'copy the `text` untouched.  `expr` should be "".\n'
                         '2. Otherwise draw ONLY from the table to craft a '
                         'reasoning plan (ordered steps).  Put that plan in '
                         '`reasoning` field.\n'
                         '3. Produce an answer in `text`.  If arithmetic is '
                         'still needed, leave an *unsolved* expression in '
                         '`expr` and tag it with `[CALC]`.\n'
                         '\n'
                         'Output object keys:\n'
                         '  • reasoning – your chain-of-table steps or "" if '
                         'not needed\n'
                         '  • status – FULL | PARTIAL | NONE  (relative to '
                         '*table* contribution)\n'
                         '  • text   – answer snippet (may be empty when '
                         'NONE)\n'
                         '  • expr   – unsolved numeric expression or ""\n'
                         '\n'
                         'RULES\n'
                         '• Use ONLY numbers that appear verbatim in the '
                         'table.\n'
                         '• Preserve units, commas, decimals exactly.\n'
                         '• Return a JSON *array* (no markdown fences) — one '
                         'object per question.\n'
                         '• Think inside ##### scratchpad; it will be '
                         'removed.\n'
                         '\n'
                         '### Example 1 – Revenue Growth\n'
                         '\n'
                         '```\n'
                         'Input Table:\n'
                         '| Company | Revenue 2020 | Revenue 2021 |\n'
                         '|---------|--------------|--------------|\n'
                         '| ABC     | 1,000        | 1,500        |\n'
                         '| XYZ     | 2,000        | 1,800        |\n'
                         '\n'
                         'Question: Which company had the largest growth in '
                         'revenue?\n'
                         '```\n'
                         '\n'
                         '**Chain-of-Table Reasoning**\n'
                         '1. Compute `Revenue_Growth = Revenue 2021 - Revenue '
                         '2020` for each row.\n'
                         '2. Select the row with the maximum '
                         '`Revenue_Growth`.\n'
                         '3. Report the company name from that row as the '
                         'final answer.\n'
                         '\n'
                         'Expected Answer: `ABC`\n'
                         '\n'
                         '---\n'
                         '\n'
                         '### Example 2 – Filtering and Summation\n'
                         '\n'
                         '```\n'
                         'Input Table:\n'
                         '| Player | Team | Points |\n'
                         '|--------|------|-------|\n'
                         '| Alice  | Red  | 12    |\n'
                         '| Bob    | Blue | 15    |\n'
                         '| Carol  | Red  | 20    |\n'
                         '\n'
                         'Question: How many total points were scored by the '
                         'Red team?\n'
                         '```\n'
                         '\n'
                         '**Chain-of-Table Reasoning**\n'
                         '1. Filter rows where `Team` equals `Red`.\n'
                         '2. Sum the `Points` column of the filtered table.\n'
                         '3. Return that sum.\n'
                         '\n'
                         'Expected Answer: `32`\n'
                         '\n'
                         '---\n'
                         '\n'
                         '### Example 3 – Joining and Computing Ratios\n'
                         '\n'
                         '```\n'
                         'Table A:\n'
                         '| CompanyID | Employees |\n'
                         '|-----------|-----------|\n'
                         '| 1         | 50        |\n'
                         '| 2         | 75        |\n'
                         '\n'
                         'Table B:\n'
                         '| CompanyID | Revenue |\n'
                         '|-----------|---------|\n'
                         '| 1         | 2,000   |\n'
                         '| 2         | 3,000   |\n'
                         '\n'
                         'Question: Which company has the higher revenue per '
                         'employee?\n'
                         '```\n'
                         '\n'
                         '**Chain-of-Table Reasoning**\n'
                         '1. Join Table A and Table B on `CompanyID`.\n'
                         '2. Compute `RevPerEmp = Revenue / Employees` for '
                         'each joined row.\n'
                         '3. Select the row with the highest `RevPerEmp` and '
                         'output the `CompanyID`.\n'
                         '\n'
                         'Expected Answer: `2`\n'
                         '\n'
                         '---\n'
                         'TABLE:\n'
                         ' |  | 2019 | 2018\n'
                         ' | Note | £m | £m\n'
                         'UK |  | 24.5 | 24.9\n'
                         'Ireland |  | 0.4 | 0.5\n'
                         'Total |  | 24.9 | 25.4\n'
                         '\n'
                         'CTX_STATUS (from Context agent):\n'
                         '[{"status": "NONE", "text": "", "expr": ""}]\n'
                         '\n'
                         'QUESTIONS:\n'
                         'What is the change to the classification for '
                         'carrying amount of financial assets?\n'
                         'What was the maximum exposure to credit risk at 31 '
                         'March 2019?\n'
                         'What are the geographic regions involving the '
                         'maximum exposure to credit risk for trade '
                         'receivables at the reporting date?\n'
                         'In which year was the amount for Ireland larger?\n'
                         'What was the change in the amount for Ireland?\n'
                         'What was the percentage change in the amount for '
                         'Ireland?\n'
                         '\n'
                         '##### INTERNAL SCRATCHPAD (think here, will be '
                         'hidden)\n'
                         '#####\n'
                         '\n'
                         'Now output the final JSON array:\n',
               'input': ' |  | 2019 | 2018\n'
                        ' | Note | £m | £m\n'
                        'UK |  | 24.5 | 24.9\n'
                        'Ireland |  | 0.4 | 0.5\n'
                        'Total |  | 24.9 | 25.4',
               'cot': '',
               'result': '(json emitted)',
               'raw': '```json\n'
                      '[\n'
                      '    {\n'
                      '        "reasoning": "",\n'
                      '        "status": "NONE",\n'
                      '        "text": "",\n'
                      '        "expr": ""\n'
                      '    },\n'
                      '    {\n'
                      '        "reasoning": "",\n'
                      '        "status": "NONE",\n'
                      '        "text": "",\n'
                      '        "expr": ""\n'
                      '    },\n'
                      '    {\n'
                      '        "reasoning": "",\n'
                      '        "status": "NONE",\n'
                      '        "text": "",\n'
                      '        "expr": ""\n'
                      '    },\n'
                      '    {\n'
                      '        "reasoning": "Compare the amounts for Ireland '
                      'in 2019 and 2018. 2019: 0.4, 2018: 0.5. Since 0.5 > '
                      '0.4, the amount for Ireland was larger in 2018.",\n'
                      '        "status": "PARTIAL",\n'
                      '        "text": "2018",\n'
                      '        "expr": ""\n'
                      '    },\n'
                      '    {\n'
                      '        "reasoning": "Calculate the change in the '
                      'amount for Ireland: 2019 amount - 2018 amount = 0.4 - '
                      '0.5.",\n'
                      '        "status": "PARTIAL",\n'
                      '        "text": "",\n'
                      '        "expr": "0.4 - 0.5"\n'
                      '    },\n'
                      '    {\n'
                      '        "reasoning": "Calculate the percentage change '
                      'in the amount for Ireland: ((2019 amount - 2018 amount) '
                      '/ 2018 amount) * 100 = ((0.4 - 0.5) / 0.5) * 100.",\n'
                      '        "status": "PARTIAL",\n'
                      '        "text": "",\n'
                      '        "expr": "((0.4 - 0.5) / 0.5) * 100"\n'
                      '    }\n'
                      ']\n'
                      '```',
               'json': []},
 'Calculator': {'cot': '',
                'result': '(calc done)',
                'json': [{'status': 'NONE', 'text': '', 'expr': ''},
                         {},
                         {},
                         {},
                         {},
                         {}]},
 'SummaCraft': {'prompt': '(deterministic)',
                'input': 'merged_items=6',
                'result': '1) INSUFFICIENT DATA\n'
                          '2) INSUFFICIENT DATA\n'
                          '3) INSUFFICIENT DATA\n'
                          '4) INSUFFICIENT DATA\n'
                          '5)  million\n'
                          '6)  percent\n'
                          '\n'
                          'Answer Echoes:\n'
                          '1) TABLE: (none) | CONTEXT: (none) | TAG: NONE\n'
                          '2) TABLE: (none) | CONTEXT: (none) | TAG: \n'
                          '3) TABLE: (none) | CONTEXT: (none) | TAG: \n'
                          '4) TABLE: (none) | CONTEXT: (none) | TAG: \n'
                          '5) TABLE: (none) | CONTEXT: (none) | TAG: \n'
                          '6) TABLE: (none) | CONTEXT: (none) | TAG: '}}
